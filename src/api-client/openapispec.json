{
  "openapi": "3.0.0",
  "paths": {
    "/api/frontend/login": {
      "get": {
        "operationId": "FrontendController_login",
        "summary": "Used to start OIDC authentication.",
        "parameters": [
          {
            "required": false,
            "name": "redirectUrl",
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "302": { "description": "Redirection to orchestrate OIDC flow." } },
        "tags": ["frontend"]
      }
    },
    "/api/frontend/logout": {
      "get": {
        "operationId": "FrontendController_logout",
        "summary": "Used to log out the current user.",
        "parameters": [],
        "responses": {
          "302": { "description": "Redirect to logout." },
          "500": { "description": "Internal server error while trying to log out." }
        },
        "tags": ["frontend"]
      }
    },
    "/api/frontend/logininfo": {
      "get": {
        "operationId": "FrontendController_info",
        "summary": "Info about logged in user.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns info about the logged in user.",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UserinfoResponse" } }
            }
          },
          "401": { "description": "User is not logged in." }
        },
        "tags": ["frontend"]
      }
    },
    "/api/frontend/provider": {
      "get": {
        "operationId": "FrontendController_provider",
        "summary": "Providers the user has access to.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns the providers for the current user.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/ServiceProviderInfoResponse" }
                }
              }
            }
          },
          "401": { "description": "User is not logged in." }
        },
        "tags": ["frontend"]
      }
    },
    "/api/frontend/personen": {
      "get": {
        "operationId": "FrontendController_persons",
        "summary": "Lists personen.",
        "parameters": [
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The offset of the paginated list.",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "The requested limit for the page size.",
            "schema": { "type": "number" }
          },
          {
            "name": "referrer",
            "required": false,
            "in": "query",
            "schema": { "nullable": true, "type": "string" }
          },
          {
            "name": "familienname",
            "required": false,
            "in": "query",
            "schema": { "nullable": true, "type": "string" }
          },
          {
            "name": "vorname",
            "required": false,
            "in": "query",
            "schema": { "nullable": true, "type": "string" }
          },
          {
            "name": "sichtfreigabe",
            "required": false,
            "in": "query",
            "schema": {
              "nullable": true,
              "default": "nein",
              "enum": ["ja", "nein"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of Personen",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/PaginatedResponseDto" },
                    {
                      "required": ["items"],
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/PersonendatensatzResponse" }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": { "description": "User is not logged in." }
        },
        "tags": ["frontend"]
      },
      "post": {
        "operationId": "FrontendController_createPerson",
        "summary": "Creates a new person.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreatePersonBodyParams" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Creates a new user",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PersonendatensatzResponse" }
              }
            }
          },
          "401": { "description": "User is not logged in." }
        },
        "tags": ["frontend"]
      }
    },
    "/api/frontend/personen/{personId}": {
      "get": {
        "operationId": "FrontendController_personById",
        "summary": "Get person by personId.",
        "parameters": [
          {
            "name": "personId",
            "required": true,
            "in": "path",
            "description": "The id for the account.",
            "schema": { "nullable": false, "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Person as PersonendatensatzResponse",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PersonendatensatzResponse" }
              }
            }
          },
          "401": { "description": "User is not logged in." },
          "404": { "description": "The requested person does not exist." }
        },
        "tags": ["frontend"]
      }
    },
    "/api/frontend/personen/{personId}/password": {
      "patch": {
        "operationId": "FrontendController_passwordReset",
        "summary": "Resets the users password.",
        "parameters": [
          {
            "name": "personId",
            "required": true,
            "in": "path",
            "description": "The id for the account.",
            "schema": { "nullable": false, "type": "string" }
          }
        ],
        "responses": {
          "202": {
            "description": "Password for person was successfully reset.",
            "content": { "application/json": { "schema": { "type": "string" } } }
          },
          "401": { "description": "User is not logged in." },
          "404": { "description": "The person does not exist." }
        },
        "tags": ["frontend"]
      }
    }
  },
  "info": {
    "title": "dBildungs IAM",
    "description": "The dBildungs IAM server API description",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "UserinfoResponse": {
        "type": "object",
        "properties": {
          "sub": { "type": "string" },
          "name": { "type": "string", "nullable": true },
          "given_name": { "type": "string", "nullable": true },
          "family_name": { "type": "string", "nullable": true },
          "middle_name": { "type": "string", "nullable": true },
          "nickname": { "type": "string", "nullable": true },
          "preferred_username": { "type": "string", "nullable": true },
          "profile": { "type": "string", "nullable": true },
          "picture": { "type": "string", "nullable": true },
          "website": { "type": "string", "nullable": true },
          "email": { "type": "string", "nullable": true },
          "email_verified": { "type": "boolean", "nullable": true },
          "gender": { "type": "string", "nullable": true },
          "birthdate": { "type": "string", "nullable": true },
          "zoneinfo": { "type": "string", "nullable": true },
          "locale": { "type": "string", "nullable": true },
          "phone_number": { "type": "string", "nullable": true },
          "updated_at": { "type": "number", "nullable": true }
        },
        "required": [
          "sub",
          "name",
          "given_name",
          "family_name",
          "middle_name",
          "nickname",
          "preferred_username",
          "profile",
          "picture",
          "website",
          "email",
          "email_verified",
          "gender",
          "birthdate",
          "zoneinfo",
          "locale",
          "phone_number",
          "updated_at"
        ]
      },
      "ServiceProviderInfoResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "url": { "type": "string" }
        },
        "required": ["id", "name", "url"]
      },
      "PaginatedResponseDto": {
        "type": "object",
        "properties": {
          "offset": { "type": "number" },
          "limit": { "type": "number" },
          "total": { "type": "number" }
        },
        "required": ["offset", "limit", "total"]
      },
      "PersonNameParams": {
        "type": "object",
        "properties": {
          "familienname": { "type": "string" },
          "vorname": { "type": "string" },
          "initialenfamilienname": { "type": "string" },
          "initialenvorname": { "type": "string" },
          "rufname": { "type": "string" },
          "titel": { "type": "string" },
          "anrede": { "type": "array", "items": { "type": "string" } },
          "namenssuffix": { "type": "array", "items": { "type": "string" } },
          "namenspraefix": { "type": "array", "items": { "type": "string" } },
          "sortierindex": { "type": "string" }
        },
        "required": ["familienname", "vorname"]
      },
      "PersonBirthParams": {
        "type": "object",
        "properties": {
          "datum": { "format": "date-time", "type": "string" },
          "geburtsort": { "type": "string" }
        }
      },
      "PersonResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "referrer": { "type": "string" },
          "mandant": { "type": "string" },
          "name": { "$ref": "#/components/schemas/PersonNameParams" },
          "geburt": { "$ref": "#/components/schemas/PersonBirthParams" },
          "stammorganisation": { "type": "string" },
          "geschlecht": { "type": "string" },
          "lokalisierung": { "type": "string" },
          "vertrauensstufe": { "type": "string", "enum": ["KEIN", "UNBE", "TEIL", "VOLL"] },
          "revision": { "type": "string" },
          "startpasswort": {
            "type": "string",
            "description": "Initiales Benutzerpasswort, muss nach der ersten Anmeldung geändert werden"
          }
        },
        "required": [
          "id",
          "referrer",
          "mandant",
          "name",
          "geburt",
          "stammorganisation",
          "geschlecht",
          "lokalisierung",
          "vertrauensstufe",
          "revision",
          "startpasswort"
        ]
      },
      "CreatedPersonenkontextOrganisationDto": { "type": "object", "properties": {} },
      "LoeschungResponse": {
        "type": "object",
        "properties": { "zeitpunkt": { "format": "date-time", "type": "string" } },
        "required": ["zeitpunkt"]
      },
      "PersonenkontextResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "referrer": { "type": "string" },
          "mandant": { "type": "string" },
          "organisation": { "$ref": "#/components/schemas/CreatedPersonenkontextOrganisationDto" },
          "rolle": { "type": "string" },
          "personenstatus": { "type": "string" },
          "jahrgangsstufe": { "type": "string" },
          "sichtfreigabe": { "type": "string" },
          "loeschung": { "$ref": "#/components/schemas/LoeschungResponse" },
          "revision": { "type": "string" }
        },
        "required": [
          "id",
          "referrer",
          "mandant",
          "organisation",
          "rolle",
          "personenstatus",
          "jahrgangsstufe",
          "sichtfreigabe",
          "loeschung",
          "revision"
        ]
      },
      "PersonendatensatzResponse": {
        "type": "object",
        "properties": {
          "person": { "$ref": "#/components/schemas/PersonResponse" },
          "personenkontexte": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/PersonenkontextResponse" }
          }
        },
        "required": ["person", "personenkontexte"]
      },
      "CreatePersonBodyParams": {
        "type": "object",
        "properties": {
          "username": { "type": "string" },
          "email": { "type": "string" },
          "referrer": { "type": "string" },
          "mandant": { "type": "string" },
          "stammorganisation": { "type": "string" },
          "name": { "$ref": "#/components/schemas/PersonNameParams" },
          "geburt": { "$ref": "#/components/schemas/PersonBirthParams" },
          "geschlecht": { "type": "string", "enum": ["m", "w", "d", "x"] },
          "lokalisierung": { "type": "string", "default": "de-DE" },
          "vertrauensstufe": { "type": "string", "enum": ["KEIN", "UNBE", "TEIL", "VOLL"] },
          "auskunftssperre": { "type": "boolean" }
        },
        "required": ["username", "mandant", "name"]
      }
    }
  }
}
